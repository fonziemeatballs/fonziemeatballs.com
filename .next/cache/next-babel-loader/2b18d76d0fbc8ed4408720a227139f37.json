{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/michaelmcguiness/Dropbox/Projects/fonziemeatballs.com/src/pages/[slug].tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '@components/Layout';\nimport { getAllDocs, getDocBySlug } from '@lib/docs';\nimport markdownToHtml from '@lib/markdown';\nexport default function Doc({\n  meta,\n  content\n}) {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    meta: meta,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\nexport async function getStaticProps({\n  params\n}) {\n  const doc = getDocBySlug(params.slug);\n  const content = await markdownToHtml(doc.content || '');\n  return {\n    props: _objectSpread(_objectSpread({}, doc), {}, {\n      content\n    })\n  };\n}\nexport async function getStaticPaths() {\n  const docs = getAllDocs();\n  return {\n    paths: docs.map(doc => {\n      return {\n        params: {\n          slug: doc.slug\n        }\n      };\n    }),\n    fallback: 'unstable_blocking'\n  };\n}","map":{"version":3,"sources":["/Users/michaelmcguiness/Dropbox/Projects/fonziemeatballs.com/src/pages/[slug].tsx"],"names":["Layout","getAllDocs","getDocBySlug","markdownToHtml","Doc","meta","content","getStaticProps","params","doc","slug","props","getStaticPaths","docs","paths","map","fallback"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,WAAzC;AACA,OAAOC,cAAP,MAA2B,eAA3B;AAEA,eAAe,SAASC,GAAT,CAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,EAAgC;AAC7C,sBAAO,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAED,IAAd;AAAA,cAAqBC;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAMC,GAAG,GAAGP,YAAY,CAACM,MAAM,CAACE,IAAR,CAAxB;AACA,QAAMJ,OAAO,GAAG,MAAMH,cAAc,CAACM,GAAG,CAACH,OAAJ,IAAe,EAAhB,CAApC;AAEA,SAAO;AACLK,IAAAA,KAAK,kCACAF,GADA;AAEHH,MAAAA;AAFG;AADA,GAAP;AAMD;AAED,OAAO,eAAeM,cAAf,GAAgC;AACrC,QAAMC,IAAI,GAAGZ,UAAU,EAAvB;AAEA,SAAO;AACLa,IAAAA,KAAK,EAAED,IAAI,CAACE,GAAL,CAAUN,GAAD,IAAS;AACvB,aAAO;AACLD,QAAAA,MAAM,EAAE;AACNE,UAAAA,IAAI,EAAED,GAAG,CAACC;AADJ;AADH,OAAP;AAKD,KANM,CADF;AAQLM,IAAAA,QAAQ,EAAE;AARL,GAAP;AAUD","sourcesContent":["import Layout from '@components/Layout';\nimport { getAllDocs, getDocBySlug } from '@lib/docs';\nimport markdownToHtml from '@lib/markdown';\n\nexport default function Doc({ meta, content }) {\n  return <Layout meta={meta}>{content}</Layout>;\n}\n\nexport async function getStaticProps({ params }) {\n  const doc = getDocBySlug(params.slug);\n  const content = await markdownToHtml(doc.content || '');\n\n  return {\n    props: {\n      ...doc,\n      content\n    }\n  };\n}\n\nexport async function getStaticPaths() {\n  const docs = getAllDocs();\n\n  return {\n    paths: docs.map((doc) => {\n      return {\n        params: {\n          slug: doc.slug\n        }\n      };\n    }),\n    fallback: 'unstable_blocking'\n  };\n}"]},"metadata":{},"sourceType":"module"}