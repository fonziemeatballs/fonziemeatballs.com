{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/michaelmcguiness/Dropbox/Projects/fonziemeatballs.com/src/pages/essays/[slug].tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport EssayLayout from '@components/EssayLayout';\nimport { getAllDocs, getDocBySlug } from '@lib/docs';\nimport markdownToHtml from '@lib/markdown';\nexport default function Doc({\n  content,\n  meta\n}) {\n  return /*#__PURE__*/_jsxDEV(EssayLayout, {\n    meta: meta,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\nexport async function getStaticProps({\n  params\n}) {\n  const doc = getDocBySlug(params.slug);\n  const content = await markdownToHtml(doc.content || '');\n  return {\n    props: _objectSpread(_objectSpread({}, doc), {}, {\n      content\n    })\n  };\n}\nexport async function getStaticPaths() {\n  const docs = getAllDocs();\n  return {\n    paths: docs.map(doc => {\n      return {\n        params: {\n          slug: doc.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/michaelmcguiness/Dropbox/Projects/fonziemeatballs.com/src/pages/essays/[slug].tsx"],"names":["EssayLayout","getAllDocs","getDocBySlug","markdownToHtml","Doc","content","meta","getStaticProps","params","doc","slug","props","getStaticPaths","docs","paths","map","fallback"],"mappings":";;;;;;;;;AAAA,OAAOA,WAAP,MAAwB,yBAAxB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,WAAzC;AACA,OAAOC,cAAP,MAA2B,eAA3B;AAEA,eAAe,SAASC,GAAT,CAAa;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAb,EAAmE;AAChF,sBAAO,QAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,IAAnB;AAAA,cAA0BD;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED,OAAO,eAAeE,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAMC,GAAG,GAAGP,YAAY,CAACM,MAAM,CAACE,IAAR,CAAxB;AACA,QAAML,OAAO,GAAG,MAAMF,cAAc,CAACM,GAAG,CAACJ,OAAJ,IAAe,EAAhB,CAApC;AAEA,SAAO;AACLM,IAAAA,KAAK,kCACAF,GADA;AAEHJ,MAAAA;AAFG;AADA,GAAP;AAMD;AAED,OAAO,eAAeO,cAAf,GAAgC;AACrC,QAAMC,IAAI,GAAGZ,UAAU,EAAvB;AAEA,SAAO;AACLa,IAAAA,KAAK,EAAED,IAAI,CAACE,GAAL,CAAUN,GAAD,IAAS;AACvB,aAAO;AACLD,QAAAA,MAAM,EAAE;AACNE,UAAAA,IAAI,EAAED,GAAG,CAACC;AADJ;AADH,OAAP;AAKD,KANM,CADF;AAQLM,IAAAA,QAAQ,EAAE;AARL,GAAP;AAUD","sourcesContent":["import EssayLayout from '@components/EssayLayout';\nimport { getAllDocs, getDocBySlug } from '@lib/docs';\nimport markdownToHtml from '@lib/markdown';\n\nexport default function Doc({ content, meta }: {content: string, meta: PageMeta}) {\n  return <EssayLayout meta={meta}>{content}</EssayLayout>;\n}\n\nexport async function getStaticProps({ params }) {\n  const doc = getDocBySlug(params.slug);\n  const content = await markdownToHtml(doc.content || '');\n\n  return {\n    props: {\n      ...doc,\n      content\n    }\n  };\n}\n\nexport async function getStaticPaths() {\n  const docs = getAllDocs();\n\n  return {\n    paths: docs.map((doc) => {\n      return {\n        params: {\n          slug: doc.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}"]},"metadata":{},"sourceType":"module"}